class PlaceholderIntegration {constructor() {this.targetPages = [ 'index_main.html','dangky.html','khaithue.html','nghiavu.html','nopthue.html','thongbao.html','tra-cuu-chung-tu.html','hoso.html','hoadondt.html','hotro.html','tienich.html','thietlap.html','ho-tro-qtthue.html','hsdkythue.html','thongtin.html','thongtinnvt.html','chi-tiet-thong-bao.html','page-thongbao.html','thongtin-chitiet.html','doimatkhau.html','thaydoittdkthue.html','tracuttnpt.html','van-tay.html','index.html' ];this.integrationTemplate = this.getIntegrationTemplate()} getIntegrationTemplate() {return ` <!-- ===== PLACEHOLDER SYSTEM INTEGRATION ===== --> <!-- Auto-generated by PlaceholderIntegration v1.0 --> <!-- Date:${new Date().toISOString()} --> <!-- Firebase --> <script src="https:<script src="https:<!-- Placeholder System --> <script src="js/placeholder-system.js"></script> <script> const firebaseConfig = {apiKey:"AIzaSyD_rJgBFgBulheVenQUE2KXr4PBpSpTCxw",authDomain:"etax-7fbf8.firebaseapp.com",databaseURL:"https:projectId:"etax-7fbf8",storageBucket:"etax-7fbf8.appspot.com",messagingSenderId:"1030026724634",appId:"1:1030026724634:web:d76f5f9dad43bad6fd58a3",measurementId:"G-YS5DLECJE6" };if (typeof firebase !== 'undefined' && !firebase.apps.length) {firebase.initializeApp(firebaseConfig)} document.addEventListener('DOMContentLoaded',function() {if (typeof PlaceholderSystem !== 'undefined') {const placeholderSystem = new PlaceholderSystem();placeholderSystem.initialize().then(() => {console.log('✅ Placeholder System initialized on:' + window.location.pathname)}).catch(error => {console.error('❌ Error initializing Placeholder System:',error)})} else {console.warn('⚠️ PlaceholderSystem class not found')} });</script> <!-- ===== END PLACEHOLDER SYSTEM INTEGRATION ===== --> `} async integrateIntoPage(pageName) {try {console.log(`🔧 Đang tích hợp vào:${pageName}`);const response = await fetch(pageName);if (!response.ok) {throw new Error(`Không thể đọc file:${pageName}`)} let html = await response.text();if (html.includes('PLACEHOLDER SYSTEM INTEGRATION')) {console.log(`⚠️ ${pageName} đã có integration,bỏ qua`);return {success:false,reason:'already_integrated' }} const bodyEndIndex = html.lastIndexOf('</body>');if (bodyEndIndex === -1) {throw new Error(`Không tìm thấy thẻ </body> trong ${pageName}`)} const newHtml = html.slice(0,bodyEndIndex) + this.integrationTemplate + html.slice(bodyEndIndex);console.log(`✅ Đã tích hợp thành công vào:${pageName}`);return {success:true,pageName:pageName,originalSize:html.length,newSize:newHtml.length }} catch (error) {console.error(`❌ Lỗi tích hợp ${pageName}:`,error);return {success:false,pageName:pageName,error:error.message }} } async integrateIntoAllPages() {console.log('🚀 Bắt đầu tích hợp vào tất cả trang...');const results = {total:this.targetPages.length,successful:0,failed:0,skipped:0,details:[] };for (const page of this.targetPages) {const result = await this.integrateIntoPage(page);results.details.push(result);if (result.success) {results.successful++} else if (result.reason === 'already_integrated') {results.skipped++} else {results.failed++} await new Promise(resolve => setTimeout(resolve,100))} console.log('📊 Kết quả tích hợp:',results);return results} generateIntegrationReport(results) {const report = {timestamp:new Date().toISOString(),summary:{total:results.total,successful:results.successful,failed:results.failed,skipped:results.skipped,successRate:Math.round((results.successful / results.total) * 100) },details:results.details,recommendations:[] };if (results.failed > 0) {report.recommendations.push('Kiểm tra lại các trang bị lỗi')} if (results.successful > 0) {report.recommendations.push('Test placeholder system trên các trang đã tích hợp')} return report} generateSampleHTML() {return `<!DOCTYPE html> <html lang="vi"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width,initial-scale=1.0"> <title>Trang mẫu với Placeholder</title> <style> body {font-family:Arial,sans-serif;margin:20px} .user-info {background:#f5f5f5;padding:20px;border-radius:8px;margin:20px 0} .placeholder {background:#e3f2fd;padding:4px 8px;border-radius:4px;font-family:monospace} </style> </head> <body> <h1>Trang mẫu với Placeholder System</h1> <div class="user-info"> <h2>Thông tin người dùng</h2> <p><strong>Mã số thuế:</strong> <span class="placeholder">{{mst}}</span></p> <p><strong>Họ tên:</strong> <span class="placeholder">{{fullName}}</span></p> <p><strong>Công ty:</strong> <span class="placeholder">{{company}}</span></p> <p><strong>Số điện thoại:</strong> <span class="placeholder">{{phone}}</span></p> <p><strong>Email:</strong> <span class="placeholder">{{email}}</span></p> <p><strong>Địa chỉ:</strong> <span class="placeholder">{{address}}</span></p> </div> <div class="user-info"> <h2>Thông tin ngân hàng</h2> <p><strong>Số tài khoản:</strong> <span class="placeholder">{{bankAccount}}</span></p> <p><strong>Tên ngân hàng:</strong> <span class="placeholder">{{bankName}}</span></p> <p><strong>Chi nhánh:</strong> <span class="placeholder">{{bankBranch}}</span></p> </div> <div class="user-info"> <h2>Thông tin thuế</h2> <p><strong>Chi cục thuế:</strong> <span class="placeholder">{{taxDepartment}}</span></p> <p><strong>Loại hình DN:</strong> <span class="placeholder">{{businessType}}</span></p> <p><strong>Ngày đăng ký:</strong> <span class="placeholder">{{registrationDate}}</span></p> </div> <div class="user-info"> <h2>Thông tin thời gian</h2> <p><strong>Ngày hiện tại:</strong> <span class="placeholder">{{currentDate}}</span></p> <p><strong>Năm hiện tại:</strong> <span class="placeholder">{{currentYear}}</span></p> <p><strong>Giờ hiện tại:</strong> <span class="placeholder">{{currentTime}}</span></p> </div> <p><em>Trang này sẽ tự động thay thế placeholder với dữ liệu thật từ Firebase khi user login.</em></p> </body> </html>`} generateManualIntegrationGuide() {return ` # 📋 HƯỚNG DẪN TÍCH HỢP PLACEHOLDER SYSTEM THỦ CÔNG ## 🎯 Mục đích Tích hợp Placeholder System vào các trang HTML để hiển thị nội dung động theo MST của user. ## 📝 Các bước thực hiện ### Bước 1:Thêm Firebase Scripts Thêm vào phần <head> hoặc trước </body>:\`\`\`html <!-- Firebase --> <script src="https:<script src="https:\`\`\` ### Bước 2:Thêm Placeholder System Script \`\`\`html <!-- Placeholder System --> <script src="js/placeholder-system.js"></script> \`\`\` ### Bước 3:Thêm Firebase Config \`\`\`html <script> const firebaseConfig = {apiKey:"AIzaSyD_rJgBFgBulheVenQUE2KXr4PBpSpTCxw",authDomain:"etax-7fbf8.firebaseapp.com",databaseURL:"https:projectId:"etax-7fbf8",storageBucket:"etax-7fbf8.appspot.com",messagingSenderId:"1030026724634",appId:"1:1030026724634:web:d76f5f9dad43bad6fd58a3",measurementId:"G-YS5DLECJE6" };if (typeof firebase !== 'undefined' && !firebase.apps.length) {firebase.initializeApp(firebaseConfig)} </script> \`\`\` ### Bước 4:Khởi tạo Placeholder System \`\`\`html <script> document.addEventListener('DOMContentLoaded',function() {if (typeof PlaceholderSystem !== 'undefined') {const placeholderSystem = new PlaceholderSystem();placeholderSystem.initialize()} });</script> \`\`\` ## 🏷️ Sử dụng Placeholder ### Các placeholder có sẵn:- \`{{mst}}\` - Mã số thuế - \`{{fullName}}\` - Họ tên đầy đủ - \`{{company}}\` - Tên công ty - \`{{phone}}\` - Số điện thoại - \`{{email}}\` - Email - \`{{address}}\` - Địa chỉ - \`{{bankAccount}}\` - Số tài khoản - \`{{bankName}}\` - Tên ngân hàng - \`{{currentDate}}\` - Ngày hiện tại - \`{{currentYear}}\` - Năm hiện tại - Và 37 placeholder khác... ### Ví dụ sử dụng:\`\`\`html <p>Mã số thuế:<strong>{{mst}}</strong></p> <p>Họ tên:<strong>{{fullName}}</strong></p> <p>Công ty:<strong>{{company}}</strong></p> \`\`\` ## ✅ Kiểm tra tích hợp 1. Mở trang trong browser 2. Mở Developer Tools (F12) 3. Kiểm tra Console có log:"✅ Placeholder System initialized" 4. Login với user có MST 5. Kiểm tra placeholder được thay thế ## 🚨 Lưu ý quan trọng - Đảm bảo user đã login và có session - Placeholder sẽ tự động thay thế khi trang load - Nếu không có dữ liệu,sẽ hiển thị giá trị mặc định - Có thể test với user-data-demo.html trước `} getTargetPages() {return this.targetPages} addTargetPage(pageName) {if (!this.targetPages.includes(pageName)) {this.targetPages.push(pageName);console.log(`📄 Đã thêm trang:${pageName}`)} } removeTargetPage(pageName) {const index = this.targetPages.indexOf(pageName);if (index > -1) {this.targetPages.splice(index,1);console.log(`🗑️ Đã xóa trang:${pageName}`)} } getSystemInfo() {return {version:'1.0',targetPages:this.targetPages.length,integrationTemplate:this.integrationTemplate.length,lastUpdate:new Date().toISOString() }} } window.createPlaceholderIntegration = function() {return new PlaceholderIntegration()};window.integrateIntoAllPages = async function() {const integration = new PlaceholderIntegration();return await integration.integrateIntoAllPages()};window.integrateIntoPage = async function(pageName) {const integration = new PlaceholderIntegration();return await integration.integrateIntoPage(pageName)};window.generateManualGuide = function() {const integration = new PlaceholderIntegration();return integration.generateManualIntegrationGuide()};console.log('🔧 Placeholder Integration v1.0 loaded successfully!');