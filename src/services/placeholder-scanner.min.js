class PlaceholderScanner {constructor() {this.pages = [ 'index_main.html','dangky.html','khaithue.html','nghiavu.html','nopthue.html','thongbao.html','tra-cuu-chung-tu.html','hoso.html','hoadondt.html','hotro.html','tienich.html','thietlap.html','ho-tro-qtthue.html','hsdkythue.html','thongtin.html','thongtinnvt.html','chi-tiet-thong-bao.html','page-thongbao.html','thongtin-chitiet.html','doimatkhau.html','thaydoittdkthue.html','tracuttnpt.html','van-tay.html','login.html' ];this.scanResults = {};this.placeholderPatterns = [];this.hardcodedData = []} async scanPage(pageName) {try {console.log(`üîç ƒêang qu√©t trang:${pageName}`);const response = await fetch(pageName);if (!response.ok) {console.warn(`‚ö†Ô∏è Kh√¥ng th·ªÉ load trang:${pageName}`);return} const html = await response.text();const results = this.analyzeHTML(html,pageName);this.scanResults[pageName] = results;console.log(`‚úÖ ƒê√£ qu√©t xong:${pageName} - T√¨m th·∫•y ${results.placeholders.length} placeholder`)} catch (error) {console.error(`‚ùå L·ªói qu√©t trang ${pageName}:`,error);this.scanResults[pageName] = {placeholders:[],hardcodedData:[],error:error.message }} } analyzeHTML(html,pageName) {const results = {placeholders:[],hardcodedData:[],pageName:pageName,timestamp:Date.now() };const placeholderRegex = /\{\{([^}]+)\}\}/g;let match;while ((match = placeholderRegex.exec(html)) !== null) {const placeholder = match[0];const field = match[1];if (!results.placeholders.includes(placeholder)) {results.placeholders.push(placeholder)} } this.findHardcodedData(html,results);return results} findHardcodedData(html,results) {const patterns = [ {regex:/\b\d{10,13}\b/g,type:'mst',description:'M√£ s·ªë thu·∫ø' },{regex:/\b0\d{9,10}\b/g,type:'phone',description:'S·ªë ƒëi·ªán tho·∫°i' },{regex:/\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b/g,type:'email',description:'Email' },{regex:/\d+\s+[A-Za-z√Ä-·ªπ\s]+,\s*(?:Qu·∫≠n|Huy·ªán|Ph∆∞·ªùng|X√£)/g,type:'address',description:'ƒê·ªãa ch·ªâ' },{regex:/(?:C√¥ng ty|Doanh nghi·ªáp|TNHH|CP|JSC)\s+[A-Za-z√Ä-·ªπ\s]+/g,type:'company',description:'T√™n c√¥ng ty' },{regex:/(?:Vietcombank|BIDV|Agribank|Techcombank|MB|ACB|Sacombank|VPBank|TPBank|HDBank)/g,type:'bank',description:'T√™n ng√¢n h√†ng' } ];patterns.forEach(pattern => {const matches = html.match(pattern.regex);if (matches) {matches.forEach(match => {if (!results.hardcodedData.some(item => item.value === match)) {results.hardcodedData.push({value:match,type:pattern.type,description:pattern.description,suggestedPlaceholder:`{{${pattern.type}}}` })} })} })} generateReport() {const report = {totalPages:this.pages.length,scannedPages:Object.keys(this.scanResults).length,totalPlaceholders:0,totalHardcodedData:0,placeholders:[],hardcodedData:[],pageDetails:{},timestamp:Date.now() };Object.keys(this.scanResults).forEach(pageName => {const results = this.scanResults[pageName];results.placeholders.forEach(placeholder => {if (!report.placeholders.includes(placeholder)) {report.placeholders.push(placeholder)} });results.hardcodedData.forEach(data => {const existing = report.hardcodedData.find(item => item.value === data.value && item.type === data.type );if (!existing) {report.hardcodedData.push(data)} });report.pageDetails[pageName] = {placeholders:results.placeholders.length,hardcodedData:results.hardcodedData.length,hasErrors:!!results.error }});report.totalPlaceholders = report.placeholders.length;report.totalHardcodedData = report.hardcodedData.length;return report} generatePlaceholdersFromRealData() {const placeholders = [];this.scanResults.forEach(pageResults => {pageResults.hardcodedData.forEach(data => {const existing = placeholders.find(p => p.field === data.type);if (!existing) {placeholders.push({code:`{{${data.type}}}`,field:data.type,description:data.description,example:data.value,source:'hardcoded_data',suggested:true })} })});this.scanResults.forEach(pageResults => {pageResults.placeholders.forEach(placeholder => {const field = placeholder.replace(/\{\{|\}\}/g,'');const existing = placeholders.find(p => p.code === placeholder);if (!existing) {placeholders.push({code:placeholder,field:field,description:this.getFieldDescription(field),example:this.getFieldExample(field),source:'existing_pattern',suggested:false })} })});return placeholders} async saveToFirebase() {try {const report = this.generateReport();const placeholders = this.generatePlaceholdersFromRealData();const data = {scan_report:report,auto_placeholders:placeholders,timestamp:Date.now() };await firebase.database().ref('placeholder_scans').push(data);console.log('‚úÖ ƒê√£ l∆∞u k·∫øt qu·∫£ scan v√†o Firebase')} catch (error) {console.error('‚ùå L·ªói l∆∞u v√†o Firebase:',error)} } getFieldDescription(field) {const descriptions = {'mst':'M√£ s·ªë thu·∫ø','fullName':'H·ªç t√™n ƒë·∫ßy ƒë·ªß','company':'T√™n c√¥ng ty','address':'ƒê·ªãa ch·ªâ','phone':'S·ªë ƒëi·ªán tho·∫°i','email':'Email','bankAccount':'S·ªë t√†i kho·∫£n ng√¢n h√†ng','bankName':'T√™n ng√¢n h√†ng','taxDepartment':'Chi c·ª•c thu·∫ø','taxCode':'M√£ s·ªë thu·∫ø','businessType':'Lo·∫°i h√¨nh doanh nghi·ªáp','registrationDate':'Ng√†y ƒëƒÉng k√Ω','currentDate':'Ng√†y hi·ªán t·∫°i','currentYear':'NƒÉm hi·ªán t·∫°i','currentMonth':'Th√°ng hi·ªán t·∫°i','currentTime':'Gi·ªù hi·ªán t·∫°i','revenue':'Doanh thu','profit':'L·ª£i nhu·∫≠n','taxAmount':'S·ªë ti·ªÅn thu·∫ø','taxRate':'T·ª∑ l·ªá thu·∫ø','currency':'ƒê∆°n v·ªã ti·ªÅn t·ªá','status':'Tr·∫°ng th√°i','note':'Ghi ch√∫' };return descriptions[field] || `Th√¥ng tin ${field}`} getFieldExample(field) {const examples = {'mst':'0123456789','fullName':'Nguy·ªÖn VƒÉn A','company':'C√¥ng ty TNHH ABC','address':'123 Nguy·ªÖn VƒÉn A,Q1,TP.HCM','phone':'0901234567','email':'contact@abc.com.vn','bankAccount':'1234567890','bankName':'Vietcombank','taxDepartment':'Chi c·ª•c thu·∫ø Qu·∫≠n 1','taxCode':'0123456789','businessType':'C√¥ng ty TNHH','registrationDate':'15/03/2020','currentDate':new Date().toLocaleDateString('vi-VN'),'currentYear':new Date().getFullYear().toString(),'currentMonth':(new Date().getMonth() + 1).toString(),'currentTime':new Date().toLocaleTimeString('vi-VN'),'revenue':'1,000,000,000 VNƒê','profit':'200,000,000 VNƒê','taxAmount':'50,000,000 VNƒê','taxRate':'5%','currency':'VNƒê','status':'ƒê√£ n·ªôp','note':'H·ªì s∆° ho√†n ch·ªânh' };return examples[field] || 'V√≠ d·ª• d·ªØ li·ªáu'} async scanAllPages() {console.log('üöÄ B·∫Øt ƒë·∫ßu qu√©t t·∫•t c·∫£ trang...');for (const page of this.pages) {await this.scanPage(page);await new Promise(resolve => setTimeout(resolve,100))} console.log('‚úÖ ƒê√£ qu√©t xong t·∫•t c·∫£ trang');return this.generateReport()} getPagesList() {return this.pages} addPage(pageName) {if (!this.pages.includes(pageName)) {this.pages.push(pageName);console.log(`üìÑ ƒê√£ th√™m trang:${pageName}`)} } removePage(pageName) {const index = this.pages.indexOf(pageName);if (index > -1) {this.pages.splice(index,1);console.log(`üóëÔ∏è ƒê√£ x√≥a trang:${pageName}`)} } getSystemInfo() {return {version:'1.0',totalPages:this.pages.length,scannedPages:Object.keys(this.scanResults).length,lastScan:this.scanResults.length > 0 ? Math.max(...Object.values(this.scanResults).map(r => r.timestamp)) :null }} } window.createPlaceholderScanner = function() {return new PlaceholderScanner()};window.scanAllPages = async function() {const scanner = new PlaceholderScanner();return await scanner.scanAllPages()};window.scanPage = async function(pageName) {const scanner = new PlaceholderScanner();return await scanner.scanPage(pageName)};console.log('üîç Placeholder Scanner v1.0 loaded successfully!');