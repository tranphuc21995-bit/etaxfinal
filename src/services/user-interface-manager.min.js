class UserInterfaceManager {constructor() {this.currentUser = null;this.userConfig = {};this.layoutElements = {};this.isInitialized = false;this.defaultTheme = 'corporate';this.userTypeToTheme = {'company':'corporate','corporate':'corporate','business':'corporate','enterprise':'corporate','individual':'individual','personal':'individual','citizen':'individual','government':'government','official':'government','state':'government','public':'government' }} async initialize() {try {console.log('üë§ Kh·ªüi t·∫°o User Interface Manager...');await this.loadCurrentUser();const theme = this.determineUserTheme();this.initializeLayoutElements();if (window.themeManager) {await window.themeManager.applyTheme(theme,this.userConfig);console.log(`üé® Applied theme:${theme} for user:${this.currentUser?.mst || 'unknown'}`)} this.setupUserInterface();this.setupEventListeners();this.isInitialized = true;console.log('‚úÖ User Interface Manager kh·ªüi t·∫°o th√†nh c√¥ng')} catch (error) {console.error('‚ùå L·ªói kh·ªüi t·∫°o User Interface Manager:',error)} } async loadCurrentUser() {try {const loggedInUser = localStorage.getItem('etax_logged_in_user');const userData = localStorage.getItem('etax_user');let userId = null;if (userData) {const user = JSON.parse(userData);userId = user.id || user.mst;this.currentUser = user} else if (loggedInUser) {userId = loggedInUser} if (!userId) {console.warn('‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y user,s·ª≠ d·ª•ng default');this.currentUser = this.getDefaultUser();return} if (firebase && firebase.database) {const userRef = firebase.database().ref(`users/${userId}`);const configRef = firebase.database().ref(`user_configs/${userId}`);const userSnapshot = await userRef.once('value');if (userSnapshot.exists()) {this.currentUser = userSnapshot.val()} const configSnapshot = await configRef.once('value');if (configSnapshot.exists()) {this.userConfig = configSnapshot.val()} console.log('‚úÖ Loaded user data:',this.currentUser);console.log('‚úÖ Loaded user config:',this.userConfig)} } catch (error) {console.error('‚ùå L·ªói load user data:',error);this.currentUser = this.getDefaultUser()} } determineUserTheme() {if (this.userConfig.theme) {return this.userConfig.theme} if (this.currentUser?.businessType) {const businessType = this.currentUser.businessType.toLowerCase();for (const [key,theme] of Object.entries(this.userTypeToTheme)) {if (businessType.includes(key)) {return theme} } } if (this.currentUser?.userType) {const userType = this.currentUser.userType.toLowerCase();return this.userTypeToTheme[userType] || this.defaultTheme} if (this.currentUser?.mst) {const mst = this.currentUser.mst;if (mst.startsWith('01') || mst.startsWith('02')) {return 'government'} if (mst.length === 10 && !mst.startsWith('0')) {return 'corporate'} if (mst.length === 12) {return 'individual'} } return this.defaultTheme} initializeLayoutElements() {this.layoutElements = {header:document.querySelector('.app-header') || this.createHeader(),sidebar:document.querySelector('.app-sidebar') || this.createSidebar(),main:document.querySelector('.app-main') || this.createMain(),footer:document.querySelector('.app-footer') || this.createFooter() }} createHeader() {const header = document.createElement('div');header.className = 'app-header';header.innerHTML = ` <div class="header-brand"> <h1>eTax Mobile</h1> </div> <div class="header-user"> <span class="user-info"> <i class="fas fa-user"></i> <span class="user-name">{{fullName}}</span> <span class="user-mst">({{mst}})</span> </span> <button class="btn-theme-switcher" onclick="window.uiManager.showThemeSwitcher()"> <i class="fas fa-palette"></i> </button> <button class="btn-logout" onclick="window.uiManager.logout()"> <i class="fas fa-sign-out-alt"></i> </button> </div> `;document.body.insertBefore(header,document.body.firstChild);return header} createSidebar() {const sidebar = document.createElement('div');sidebar.className = 'app-sidebar';sidebar.innerHTML = ` <div class="nav-menu"> <div class="nav-section"> <div class="nav-section-title">Dashboard</div> <div class="nav-item active"> <a href="index.html" class="nav-link"> <i class="nav-icon fas fa-home"></i> Trang ch·ªß </a> </div> </div> <div class="nav-section"> <div class="nav-section-title">Khai thu·∫ø</div> <div class="nav-item"> <a href="hoso.html" class="nav-link"> <i class="nav-icon fas fa-file-alt"></i> H·ªì s∆° thu·∫ø </a> </div> <div class="nav-item"> <a href="tra-cuu-chung-tu.html" class="nav-link"> <i class="nav-icon fas fa-search"></i> Tra c·ª©u ch·ª©ng t·ª´ </a> </div> </div> <div class="nav-section"> <div class="nav-section-title">T√†i kho·∫£n</div> <div class="nav-item"> <a href="thongtinnvt.html" class="nav-link"> <i class="nav-icon fas fa-user-circle"></i> Th√¥ng tin c√° nh√¢n </a> </div> <div class="nav-item"> <a href="doimatkhau.html" class="nav-link"> <i class="nav-icon fas fa-key"></i> ƒê·ªïi m·∫≠t kh·∫©u </a> </div> </div> </div> `;document.body.appendChild(sidebar);return sidebar} createMain() {let main = document.querySelector('main') || document.querySelector('.container');if (!main) {main = document.createElement('div');main.className = 'app-main';document.body.appendChild(main)} else {main.classList.add('app-main')} return main} createFooter() {const footer = document.createElement('div');footer.className = 'app-footer';footer.innerHTML = ` <div class="footer-content"> <span>¬© 2025 eTax Mobile - Powered by {{company}}</span> <span class="footer-theme">Theme:<span id="current-theme-name">Corporate</span></span> </div> `;document.body.appendChild(footer);return footer} setupUserInterface() {this.updateNavigationForUser();this.updateUserInfoDisplays();this.setupThemeFeatures();this.setupResponsiveBehavior()} updateNavigationForUser() {const navMenu = document.querySelector('.nav-menu');if (!navMenu) return;const userType = this.currentUser?.userType || 'individual';const theme = window.themeManager?.getCurrentTheme()?.key || this.defaultTheme;if (theme === 'government') {this.addGovernmentNavItems()} else if (theme === 'corporate') {this.addCorporateNavItems()} else if (theme === 'individual') {this.addIndividualNavItems()} } addGovernmentNavItems() {const navMenu = document.querySelector('.nav-menu');const govSection = document.createElement('div');govSection.className = 'nav-section';govSection.innerHTML = ` <div class="nav-section-title">C√¥ng v·ª•</div> <div class="nav-item"> <a href="#" class="nav-link"> <i class="nav-icon fas fa-stamp"></i> Ph√™ duy·ªát h·ªì s∆° </a> </div> <div class="nav-item"> <a href="#" class="nav-link"> <i class="nav-icon fas fa-archive"></i> L∆∞u tr·ªØ t√†i li·ªáu </a> </div> <div class="nav-item"> <a href="#" class="nav-link"> <i class="nav-icon fas fa-chart-bar"></i> B√°o c√°o th·ªëng k√™ </a> </div> `;navMenu.appendChild(govSection)} addCorporateNavItems() {const navMenu = document.querySelector('.nav-menu');const corpSection = document.createElement('div');corpSection.className = 'nav-section';corpSection.innerHTML = ` <div class="nav-section-title">Doanh nghi·ªáp</div> <div class="nav-item"> <a href="#" class="nav-link"> <i class="nav-icon fas fa-building"></i> Qu·∫£n l√Ω chi nh√°nh </a> </div> <div class="nav-item"> <a href="#" class="nav-link"> <i class="nav-icon fas fa-users"></i> Nh√¢n vi√™n </a> </div> <div class="nav-item"> <a href="#" class="nav-link"> <i class="nav-icon fas fa-chart-line"></i> Analytics </a> </div> `;navMenu.appendChild(corpSection)} addIndividualNavItems() {const navMenu = document.querySelector('.nav-menu');const indSection = document.createElement('div');indSection.className = 'nav-section';indSection.innerHTML = ` <div class="nav-section-title">C√° nh√¢n</div> <div class="nav-item"> <a href="#" class="nav-link"> <i class="nav-icon fas fa-calculator"></i> T√≠nh thu·∫ø nhanh </a> </div> <div class="nav-item"> <a href="#" class="nav-link"> <i class="nav-icon fas fa-question-circle"></i> H∆∞·ªõng d·∫´n </a> </div> <div class="nav-item"> <a href="#" class="nav-link"> <i class="nav-icon fas fa-mobile-alt"></i> ·ª®ng d·ª•ng mobile </a> </div> `;navMenu.appendChild(indSection)} updateUserInfoDisplays() {const themeNameElement = document.getElementById('current-theme-name');if (themeNameElement && window.themeManager) {const currentTheme = window.themeManager.getCurrentTheme();themeNameElement.textContent = currentTheme.theme.name} if (window.placeholderSystem) {window.placeholderSystem.replaceAllPlaceholders()} } setupThemeFeatures() {const theme = window.themeManager?.getCurrentTheme()?.key || this.defaultTheme;document.body.classList.add(`ui-${theme}`);switch (theme) {case 'government':this.setupGovernmentFeatures();break;case 'corporate':this.setupCorporateFeatures();break;case 'individual':this.setupIndividualFeatures();break} } setupGovernmentFeatures() {const header = document.querySelector('.app-header');if (header) {const seal = document.createElement('div');seal.className = 'official-seal';seal.textContent = 'CH√çNH TH·ª®C';header.appendChild(seal)} document.querySelectorAll('.card').forEach((card,index) => {const priority = ['high','normal','low'][index % 3];card.classList.add(`priority-${priority}`)})} setupCorporateFeatures() {const header = document.querySelector('.header-brand h1');if (header) {header.innerHTML = ` <i class="fas fa-building"></i> eTax Corporate `} this.addAnalyticsWidgets()} setupIndividualFeatures() {const main = document.querySelector('.app-main');if (main && !document.querySelector('.welcome-message')) {const welcome = document.createElement('div');welcome.className = 'welcome-message alert';welcome.innerHTML = ` <h3>Xin ch√†o {{fullName}}! üëã</h3> <p>Ch√∫c b·∫°n m·ªôt ng√†y l√†m vi·ªác hi·ªáu qu·∫£ v·ªõi eTax Mobile!</p> `;main.insertBefore(welcome,main.firstChild)} this.addQuickActions()} addAnalyticsWidgets() {const main = document.querySelector('.app-main');if (!main || document.querySelector('.analytics-widgets')) return;const widgets = document.createElement('div');widgets.className = 'analytics-widgets';widgets.innerHTML = ` <div class="widget-grid"> <div class="stat-card"> <div class="stat-number">{{revenue}}</div> <div class="stat-label">Doanh thu</div> </div> <div class="stat-card"> <div class="stat-number">{{taxAmount}}</div> <div class="stat-label">S·ªë thu·∫ø ph·∫£i n·ªôp</div> </div> <div class="stat-card"> <div class="stat-number">{{taxRate}}</div> <div class="stat-label">Thu·∫ø su·∫•t</div> </div> </div> `;main.appendChild(widgets)} addQuickActions() {const main = document.querySelector('.app-main');if (!main || document.querySelector('.quick-actions')) return;const quickActions = document.createElement('div');quickActions.className = 'quick-actions';quickActions.innerHTML = ` <h3>Thao t√°c nhanh</h3> <div class="quick-buttons"> <button class="btn btn-primary" onclick="location.href='hoso.html'"> <i class="fas fa-file-plus"></i> T·∫°o h·ªì s∆° m·ªõi </button> <button class="btn btn-secondary" onclick="location.href='tra-cuu-chung-tu.html'"> <i class="fas fa-search"></i> Tra c·ª©u nhanh </button> <button class="btn btn-secondary" onclick="window.uiManager.openCalculator()"> <i class="fas fa-calculator"></i> T√≠nh thu·∫ø </button> </div> `;main.appendChild(quickActions)} setupResponsiveBehavior() {this.setupMobileMenuToggle();window.addEventListener('resize',() => {this.handleWindowResize()})} setupMobileMenuToggle() {const header = document.querySelector('.app-header');const sidebar = document.querySelector('.app-sidebar');if (!header || !sidebar) return;const menuBtn = document.createElement('button');menuBtn.className = 'mobile-menu-btn';menuBtn.innerHTML = '<i class="fas fa-bars"></i>';menuBtn.onclick = () => this.toggleMobileMenu();header.insertBefore(menuBtn,header.firstChild)} toggleMobileMenu() {const sidebar = document.querySelector('.app-sidebar');if (sidebar) {sidebar.classList.toggle('mobile-open')} } handleWindowResize() {const sidebar = document.querySelector('.app-sidebar');if (window.innerWidth > 768 && sidebar) {sidebar.classList.remove('mobile-open')} } setupEventListeners() {document.addEventListener('themeChanged',(e) => {this.handleThemeChange(e.detail)});document.addEventListener('userChanged',(e) => {this.handleUserChange(e.detail)})} handleThemeChange(themeDetail) {console.log('üé® Theme changed to:',themeDetail.themeName);this.updateUserInfoDisplays();this.setupThemeFeatures();if (this.currentUser?.mst) {window.themeManager?.saveUserThemePreference( this.currentUser.mst,themeDetail.themeName,themeDetail.userConfig )} } handleUserChange(userDetail) {console.log('üë§ User changed:',userDetail);this.currentUser = userDetail.user;this.userConfig = userDetail.config || {};const newTheme = this.determineUserTheme();if (window.themeManager) {window.themeManager.applyTheme(newTheme,this.userConfig)} } showThemeSwitcher() {if (!window.themeManager) return;const themes = window.themeManager.getAvailableThemes();const currentTheme = window.themeManager.getCurrentTheme();const dialog = document.createElement('div');dialog.className = 'theme-switcher-dialog';dialog.innerHTML = ` <div class="dialog-backdrop" onclick="this.parentElement.remove()"></div> <div class="dialog-content"> <h3>Ch·ªçn giao di·ªán</h3> <div class="theme-options"> ${themes.map(theme => ` <div class="theme-option ${theme.key === currentTheme.key ? 'active' :''}" onclick="window.uiManager.switchTheme('${theme.key}')"> <div class="theme-preview theme-${theme.key}"></div> <h4>${theme.name}</h4> <p>${theme.description}</p> </div> `).join('')} </div> <div class="dialog-actions"> <button class="btn btn-secondary" onclick="this.closest('.theme-switcher-dialog').remove()"> ƒê√≥ng </button> </div> </div> `;document.body.appendChild(dialog)} async switchTheme(themeName) {if (window.themeManager) {await window.themeManager.applyTheme(themeName,this.userConfig)} const dialog = document.querySelector('.theme-switcher-dialog');if (dialog) dialog.remove()} openCalculator() {const calculator = document.createElement('div');calculator.className = 'calculator-widget';calculator.innerHTML = ` <div class="widget-backdrop" onclick="this.parentElement.remove()"></div> <div class="widget-content"> <h3>T√≠nh thu·∫ø nhanh</h3> <div class="calc-form"> <div class="form-group"> <label>Doanh thu (VNƒê):</label> <input type="number" id="revenue-input" class="form-control" placeholder="Nh·∫≠p doanh thu"> </div> <div class="form-group"> <label>Thu·∫ø su·∫•t (%):</label> <select id="tax-rate-input" class="form-control"> <option value="0">0% (Kh√¥ng ch·ªãu thu·∫ø)</option> <option value="5">5% (Thu·∫ø su·∫•t th√¥ng th∆∞·ªùng)</option> <option value="10">10% (Thu·∫ø su·∫•t cao)</option> <option value="20">20% (Thu·∫ø su·∫•t ƒë·∫∑c bi·ªát)</option> </select> </div> <div class="calc-result"> <strong>Thu·∫ø ph·∫£i n·ªôp:<span id="tax-result">0 VNƒê</span></strong> </div> </div> <div class="widget-actions"> <button class="btn btn-primary" onclick="window.uiManager.calculateTax()">T√≠nh</button> <button class="btn btn-secondary" onclick="this.closest('.calculator-widget').remove()">ƒê√≥ng</button> </div> </div> `;document.body.appendChild(calculator)} calculateTax() {const revenue = parseFloat(document.getElementById('revenue-input').value) || 0;const taxRate = parseFloat(document.getElementById('tax-rate-input').value) || 0;const taxAmount = (revenue * taxRate) / 100;const resultElement = document.getElementById('tax-result');if (resultElement) {resultElement.textContent = new Intl.NumberFormat('vi-VN').format(taxAmount) + ' VNƒê'} } logout() {localStorage.removeItem('etax_user');localStorage.removeItem('etax_logged_in_user');window.location.href = 'login.html'} async switchUser(mst) {try {if (firebase && firebase.database) {const userRef = firebase.database().ref(`users/${mst}`);const configRef = firebase.database().ref(`user_configs/${mst}`);const userSnapshot = await userRef.once('value');const configSnapshot = await configRef.once('value');if (userSnapshot.exists()) {this.currentUser = userSnapshot.val();this.userConfig = configSnapshot.exists() ? configSnapshot.val() :{};localStorage.setItem('etax_logged_in_user',mst);localStorage.setItem('etax_user',JSON.stringify(this.currentUser));await this.initialize();console.log(`‚úÖ Switched to user:${mst}`);return true} } } catch (error) {console.error('‚ùå Error switching user:',error)} return false} getDefaultUser() {return {mst:'0123456789',fullName:'Nguy·ªÖn VƒÉn A',company:'C√¥ng ty TNHH ABC',userType:'corporate',businessType:'C√¥ng ty TNHH',address:'123 Nguy·ªÖn VƒÉn A,Qu·∫≠n 1,TP.HCM',phone:'0901234567',email:'contact@abc.com.vn' }} getSystemInfo() {return {version:'1.0',initialized:this.isInitialized,currentUser:this.currentUser?.mst || 'unknown',theme:window.themeManager?.getCurrentTheme()?.key || 'unknown',layoutElements:Object.keys(this.layoutElements).length }} } window.UserInterfaceManager = UserInterfaceManager;document.addEventListener('DOMContentLoaded',function() {if (!window.uiManager) {window.uiManager = new UserInterfaceManager();setTimeout(() => {window.uiManager.initialize()},500);console.log('üë§ User Interface Manager initialized')} });console.log('üë§ User Interface Manager v1.0 loaded successfully!');