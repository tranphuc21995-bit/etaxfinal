/**
 * eTax Mobile - Data Management System
 * Qu·∫£n l√Ω d·ªØ li·ªáu t·∫≠p trung theo MST
 *
 * @author eTax Mobile Team
 * @version 1.0.0
 */

class DataManager {
  constructor() {
    this.userData = new Map();
    this.currentMST = null;
    this.initializeDefaultData();
  }

  /**
   * Kh·ªüi t·∫°o d·ªØ li·ªáu m·∫´u m·∫∑c ƒë·ªãnh ƒë·ªÉ test ƒë·ªìng b·ªô
   */
  initializeDefaultData() {
    console.log('üîÑ Initializing default data for testing...');

    // D·ªØ li·ªáu m·∫´u cho c√°c MST kh√°c nhau
    const defaultData = {
      "0123456789": {
        // Th√¥ng tin c∆° b·∫£n
        mst: "0123456789",
        fullName: "NGUY·ªÑN VƒÇN A",
        address: "123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, TP.HCM",
        taxOffice: "Chi c·ª•c thu·∫ø Qu·∫≠n XYZ",
        phone: "0123456789",
        email: "nguyenvana@example.com",

        // Th√¥ng tin thu·∫ø
        taxInfo: {
          totalAmount: "3,750,000 VND",
          paidAmount: "0 VND",
          pendingAmount: "3,750,000 VND",
          items: [
            {
              id: "04057866369400001",
              decision: "1866/TB-CCT",
              date: "07/01/2025",
              office: "ƒê·ªôi Thu·∫ø th√†nh ph·ªë H·∫° Long",
              chapter: "757",
              period: "00/06/2025",
              type: "Thu·∫ø gi√° tr·ªã gia tƒÉng h√†ng s·∫£n xu·∫•t, kinh doanh trong n∆∞·ªõc (g·ªìm c·∫£ d·ªãch v·ª• trong lƒ©nh v·ª±c d·∫ßu kh√≠) (1701)",
              region: "Th√†nh ph·ªë H·∫° Long (193HH)",
              dueDate: "30/06/2025",
              amount: "2,500,000 VND",
              paid: "0 VND",
              status: "C√≤n ph·∫£i n·ªôp",
              reference: "11020250031907891"
            },
            {
              id: "04057866369400002",
              decision: "1867/TB-CCT",
              date: "07/01/2025",
              office: "ƒê·ªôi Thu·∫ø th√†nh ph·ªë H·∫° Long",
              chapter: "757",
              period: "00/06/2025",
              type: "Thu·∫ø thu nh·∫≠p t·ª´ ho·∫°t ƒë·ªông s·∫£n xu·∫•t, kinh doanh c·ªßa c√° nh√¢n (1003)",
              region: "Th√†nh ph·ªë H·∫° Long (193HH)",
              dueDate: "30/06/2025",
              amount: "1,250,000 VND",
              paid: "0 VND",
              status: "C√≤n ph·∫£i n·ªôp",
              reference: "11020250031907892"
            }
          ]
        }
      },

      "8198700370": {
        // Th√¥ng tin c∆° b·∫£n
        mst: "8198700370",
        fullName: "TR·∫¶N TH√ÄNH PH√öC",
        address: "456 ƒê∆∞·ªùng DEF, Qu·∫≠n GHI, TP.HCM",
        taxOffice: "Chi c·ª•c thu·∫ø Qu·∫≠n GHI",
        phone: "0987654321",
        email: "tranthanhphuc@example.com",

        // Th√¥ng tin thu·∫ø
        taxInfo: {
          totalAmount: "5,000,000 VND",
          paidAmount: "1,000,000 VND",
          pendingAmount: "4,000,000 VND",
          items: [
            {
              id: "04057866369400003",
              decision: "1868/TB-CCT",
              date: "08/01/2025",
              office: "ƒê·ªôi Thu·∫ø Qu·∫≠n GHI",
              chapter: "758",
              period: "00/07/2025",
              type: "Thu·∫ø thu nh·∫≠p doanh nghi·ªáp (1001)",
              region: "Qu·∫≠n GHI (194HH)",
              dueDate: "31/07/2025",
              amount: "3,000,000 VND",
              paid: "1,000,000 VND",
              status: "ƒêang n·ªôp",
              reference: "11020250031907893"
            },
            {
              id: "04057866369400004",
              decision: "1869/TB-CCT",
              date: "08/01/2025",
              office: "ƒê·ªôi Thu·∫ø Qu·∫≠n GHI",
              chapter: "758",
              period: "00/07/2025",
              type: "Thu·∫ø gi√° tr·ªã gia tƒÉng (1701)",
              region: "Qu·∫≠n GHI (194HH)",
              dueDate: "31/07/2025",
              amount: "2,000,000 VND",
              paid: "0 VND",
              status: "C√≤n ph·∫£i n·ªôp",
              reference: "11020250031907894"
            }
          ]
        }
      },

      "001095000163": {
        // Th√¥ng tin c∆° b·∫£n
        mst: "001095000163",
        fullName: "NGUY·ªÑN TRUNG NGHƒ®A",
        address: "789 ƒê∆∞·ªùng KLM, Qu·∫≠n NOP, TP.HCM",
        taxOffice: "Chi c·ª•c thu·∫ø Qu·∫≠n NOP",
        phone: "0369852147",
        email: "nguyentrungnghia@example.com",

        // Th√¥ng tin thu·∫ø
        taxInfo: {
          totalAmount: "1,800,000 VND",
          paidAmount: "800,000 VND",
          pendingAmount: "1,000,000 VND",
          items: [
            {
              id: "04057866369400005",
              decision: "1870/TB-CCT",
              date: "09/01/2025",
              office: "ƒê·ªôi Thu·∫ø Qu·∫≠n NOP",
              chapter: "759",
              period: "00/08/2025",
              type: "Thu·∫ø m√¥n b√†i (1702)",
              region: "Qu·∫≠n NOP (195HH)",
              dueDate: "31/08/2025",
              amount: "1,000,000 VND",
              paid: "800,000 VND",
              status: "ƒêang n·ªôp",
              reference: "11020250031907895"
            },
            {
              id: "04057866369400006",
              decision: "1871/TB-CCT",
              date: "09/01/2025",
              office: "ƒê·ªôi Thu·∫ø Qu·∫≠n NOP",
              chapter: "759",
              period: "00/08/2025",
              type: "Thu·∫ø t√†i nguy√™n (1703)",
              region: "Qu·∫≠n NOP (195HH)",
              dueDate: "31/08/2025",
              amount: "800,000 VND",
              paid: "0 VND",
              status: "C√≤n ph·∫£i n·ªôp",
              reference: "11020250031907896"
            }
          ]
        }
      }
    };

    // L∆∞u v√†o Map ƒë·ªÉ truy c·∫≠p nhanh
    Object.keys(defaultData).forEach(mst => {
      this.userData.set(mst, defaultData[mst]);
    });
  }

  /**
   * L·∫•y d·ªØ li·ªáu ng∆∞·ªùi d√πng theo MST
   * @param {string} mst - M√£ s·ªë thu·∫ø
   * @returns {object|null} D·ªØ li·ªáu ng∆∞·ªùi d√πng ho·∫∑c null n·∫øu kh√¥ng t√¨m th·∫•y
   */
  getUserData(mst) {
    if (!mst) return null;

    // T√¨m ch√≠nh x√°c MST
    if (this.userData.has(mst)) {
      return this.userData.get(mst);
    }

    // T√¨m MST g·∫ßn ƒë√∫ng (fallback)
    for (let [key, data] of this.userData) {
      if (key.includes(mst) || mst.includes(key)) {
        return data;
      }
    }

    return null;
  }

  /**
   * L·∫•y th√¥ng tin c∆° b·∫£n c·ªßa ng∆∞·ªùi d√πng
   * @param {string} mst - M√£ s·ªë thu·∫ø
   * @returns {object} Th√¥ng tin c∆° b·∫£n
   */
  getBasicUserInfo(mst) {
    const userData = this.getUserData(mst);
    if (!userData) return null;

    return {
      mst: userData.mst,
      fullName: userData.fullName,
      address: userData.address,
      taxOffice: userData.taxOffice,
      phone: userData.phone,
      email: userData.email
    };
  }

  /**
   * L·∫•y th√¥ng tin thu·∫ø c·ªßa ng∆∞·ªùi d√πng
   * @param {string} mst - M√£ s·ªë thu·∫ø
   * @returns {object} Th√¥ng tin thu·∫ø
   */
  getTaxInfo(mst) {
    const userData = this.getUserData(mst);
    if (!userData || !userData.taxInfo) return null;

    return userData.taxInfo;
  }

  /**
   * L·∫•y chi ti·∫øt thu·∫ø theo ID
   * @param {string} mst - M√£ s·ªë thu·∫ø
   * @param {string} itemId - ID kho·∫£n thu·∫ø
   * @returns {object|null} Chi ti·∫øt thu·∫ø ho·∫∑c null
   */
  getTaxDetail(mst, itemId) {
    const taxInfo = this.getTaxInfo(mst);
    if (!taxInfo || !taxInfo.items) return null;

    return taxInfo.items.find(item => item.id === itemId) || null;
  }

  /**
   * C·∫≠p nh·∫≠t d·ªØ li·ªáu ng∆∞·ªùi d√πng
   * @param {string} mst - M√£ s·ªë thu·∫ø
   * @param {object} newData - D·ªØ li·ªáu m·ªõi
   */
  updateUserData(mst, newData) {
    if (this.userData.has(mst)) {
      const currentData = this.userData.get(mst);
      const updatedData = { ...currentData, ...newData };
      this.userData.set(mst, updatedData);

      // L∆∞u v√†o localStorage ƒë·ªÉ ƒë·ªìng b·ªô
      localStorage.setItem(`etax_user_data_${mst}`, JSON.stringify(updatedData));
    }
  }

  /**
   * ƒê·ªìng b·ªô d·ªØ li·ªáu t·ª´ localStorage
   */
  syncFromLocalStorage() {
    for (let i = 0; i < localStorage.length; i++) {
      const key = localStorage.key(i);
      if (key.startsWith('etax_user_data_')) {
        const mst = key.replace('etax_user_data_', '');
        const data = JSON.parse(localStorage.getItem(key));
        this.userData.set(mst, data);
      }
    }
  }

  /**
   * L∆∞u d·ªØ li·ªáu v√†o localStorage
   * @param {string} mst - M√£ s·ªë thu·∫ø
   */
  saveToLocalStorage(mst) {
    const userData = this.getUserData(mst);
    if (userData) {
      localStorage.setItem(`etax_user_data_${mst}`, JSON.stringify(userData));
    }
  }

  /**
   * L·∫•y danh s√°ch t·∫•t c·∫£ MST c√≥ d·ªØ li·ªáu
   * @returns {string[]} Danh s√°ch MST
   */
  getAllMSTs() {
    return Array.from(this.userData.keys());
  }

  /**
   * Ki·ªÉm tra MST c√≥ t·ªìn t·∫°i kh√¥ng
   * @param {string} mst - M√£ s·ªë thu·∫ø
   * @returns {boolean} True n·∫øu t·ªìn t·∫°i
   */
  hasMST(mst) {
    return this.userData.has(mst);
  }
}

// T·∫°o instance to√†n c·ª•c
window.dataManager = new DataManager();

// ƒê·ªìng b·ªô d·ªØ li·ªáu t·ª´ localStorage khi trang load
document.addEventListener('DOMContentLoaded', function() {
  window.dataManager.syncFromLocalStorage();
});

console.log('‚úÖ Data Manager initialized with', window.dataManager.getAllMSTs().length, 'MST records');
