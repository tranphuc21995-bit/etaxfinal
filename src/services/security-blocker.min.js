(function() {'use strict';const SECURITY_CONFIG = {allowedDomains:[ window.location.hostname,'etax-7fbf8.web.app','etax-7fbf8.firebaseapp.com' ],allowedProtocols:[ 'mailto:','tel:','sms:','#' ],blockMessage:'ðŸ”’ Báº£o máº­t:KhÃ´ng Ä‘Æ°á»£c phÃ©p truy cáº­p link bÃªn ngoÃ i há»‡ thá»‘ng',logAttempts:true };function logSecurityAttempt(url,type) {if (SECURITY_CONFIG.logAttempts) {console.warn(`ðŸ”’ SECURITY BLOCKED:${type} attempt to ${url}`);if (typeof firebase !== 'undefined' && firebase.database) {const db = firebase.database();db.ref('securityLogs').push({timestamp:new Date().toISOString(),type:type,blockedUrl:url,userAgent:navigator.userAgent,currentPage:window.location.href })} } } function isAllowedUrl(url) {try {const urlObj = new URL(url);if (SECURITY_CONFIG.allowedDomains.includes(urlObj.hostname)) {return true} for (const protocol of SECURITY_CONFIG.allowedProtocols) {if (url.startsWith(protocol)) {return true} } return false} catch (e) {return false} } function blockExternalLinks(e) {const target = e.target.closest('a');if (target && target.href) {if (!isAllowedUrl(target.href)) {e.preventDefault();e.stopPropagation();alert(SECURITY_CONFIG.blockMessage);logSecurityAttempt(target.href,'CLICK');return false} } } function blockWindowOpen() {const originalWindowOpen = window.open;window.open = function(url,target,features) {if (url && typeof url === 'string') {if (!isAllowedUrl(url)) {alert(SECURITY_CONFIG.blockMessage);logSecurityAttempt(url,'WINDOW.OPEN');return null} } return originalWindowOpen.call(this,url,target,features)}} function blockLocationHref() {const originalLocationHref = Object.getOwnPropertyDescriptor(window.location,'href');Object.defineProperty(window.location,'href',{set:function(url) {if (url && typeof url === 'string') {if (!isAllowedUrl(url)) {alert(SECURITY_CONFIG.blockMessage);logSecurityAttempt(url,'LOCATION.HREF');return} } originalLocationHref.set.call(this,url)},get:originalLocationHref.get })} function blockLocationAssign() {const originalAssign = window.location.assign;window.location.assign = function(url) {if (url && typeof url === 'string') {if (!isAllowedUrl(url)) {alert(SECURITY_CONFIG.blockMessage);logSecurityAttempt(url,'LOCATION.ASSIGN');return} } return originalAssign.call(this,url)}} function blockLocationReplace() {const originalReplace = window.location.replace;window.location.replace = function(url) {if (url && typeof url === 'string') {if (!isAllowedUrl(url)) {alert(SECURITY_CONFIG.blockMessage);logSecurityAttempt(url,'LOCATION.REPLACE');return} } return originalReplace.call(this,url)}} function blockFormSubmission(e) {const form = e.target;if (form.action) {if (!isAllowedUrl(form.action)) {e.preventDefault();alert(SECURITY_CONFIG.blockMessage);logSecurityAttempt(form.action,'FORM_SUBMIT');return false} } } function blockIframeSrc() {const observer = new MutationObserver(function(mutations) {mutations.forEach(function(mutation) {mutation.addedNodes.forEach(function(node) {if (node.nodeType === 1 && node.tagName === 'IFRAME') {if (node.src && !isAllowedUrl(node.src)) {node.remove();alert(SECURITY_CONFIG.blockMessage);logSecurityAttempt(node.src,'IFRAME')} } })})});observer.observe(document.body,{childList:true,subtree:true })} function initializeSecurity() {document.addEventListener('click',blockExternalLinks,true);blockWindowOpen();blockLocationHref();blockLocationAssign();blockLocationReplace();document.addEventListener('submit',blockFormSubmission,true);blockIframeSrc();console.log('ðŸ”’ Security Blocker Ä‘Ã£ Ä‘Æ°á»£c kÃ­ch hoáº¡t')} if (document.readyState === 'loading') {document.addEventListener('DOMContentLoaded',initializeSecurity)} else {initializeSecurity()} window.SecurityBlocker = {isAllowedUrl:isAllowedUrl,logSecurityAttempt:logSecurityAttempt,SECURITY_CONFIG:SECURITY_CONFIG }})();